name: NAT Gateway Cleanup

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  cleanup-nat-gateway:
    name: Remove NAT Gateway
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: set branch_name
        run: |
          BRANCH_NAME=$(./.github/setBranchName.sh ${{ github.ref_name }})
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: set branch specific variable names
        run: ./.github/build_vars.sh set_names

      - name: set variable values
        run: ./.github/build_vars.sh set_values
        env:
          AWS_OIDC_ROLE_TO_ASSUME: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_OIDC_ROLE_TO_ASSUME] || secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}

      - name: Configure AWS credentials for GitHub Actions OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Check NAT Gateway status
        id: check-nat-gateway
        run: |
          NAT_GATEWAY_ID="nat-08e6adc54855a5789"
          echo "Checking status of NAT Gateway: $NAT_GATEWAY_ID"

          NAT_STATUS=$(aws ec2 describe-nat-gateways --nat-gateway-ids $NAT_GATEWAY_ID --query 'NatGateways[0].State' --output text 2>/dev/null || echo "not-found")
          echo "NAT Gateway status: $NAT_STATUS"
          echo "nat_status=$NAT_STATUS" >> $GITHUB_OUTPUT
        env:
          AWS_RETRY_MODE: adaptive
          AWS_MAX_ATTEMPTS: 10

      - name: Delete NAT Gateway
        if: ${{ steps.check-nat-gateway.outputs.nat_status != 'not-found' && steps.check-nat-gateway.outputs.nat_status != 'deleted' }}
        run: |
          NAT_GATEWAY_ID="nat-08e6adc54855a5789"
          echo "Deleting NAT Gateway: $NAT_GATEWAY_ID"

          aws ec2 delete-nat-gateway --nat-gateway-id $NAT_GATEWAY_ID
          echo "NAT Gateway deletion initiated successfully"
          echo "Note: NAT Gateway deletion may take several minutes to complete"
        env:
          AWS_RETRY_MODE: adaptive
          AWS_MAX_ATTEMPTS: 10

      - name: Wait for deletion confirmation
        if: ${{ steps.check-nat-gateway.outputs.nat_status != 'not-found' && steps.check-nat-gateway.outputs.nat_status != 'deleted' }}
        run: |
          NAT_GATEWAY_ID="nat-08e6adc54855a5789"
          echo "Waiting for NAT Gateway deletion to complete..."

          # Wait up to 10 minutes for deletion
          for i in {1..20}; do
            sleep 30
            STATUS=$(aws ec2 describe-nat-gateways --nat-gateway-ids $NAT_GATEWAY_ID --query 'NatGateways[0].State' --output text 2>/dev/null || echo "deleted")
            echo "Current status: $STATUS"
            
            if [ "$STATUS" == "deleted" ] || [ "$STATUS" == "not-found" ]; then
              echo "NAT Gateway successfully deleted"
              exit 0
            fi
          done

          echo "Warning: NAT Gateway deletion is still in progress after 10 minutes"
        env:
          AWS_RETRY_MODE: adaptive
          AWS_MAX_ATTEMPTS: 10

      - name: Summary
        run: |
          if [ "${{ steps.check-nat-gateway.outputs.nat_status }}" == "not-found" ]; then
            echo "## NAT Gateway Not Found" >> $GITHUB_STEP_SUMMARY
            echo "NAT Gateway nat-08e6adc54855a5789 was not found or already deleted" >> $GITHUB_STEP_SUMMARY
          else
            echo "## NAT Gateway Cleanup Completed" >> $GITHUB_STEP_SUMMARY
            echo "NAT Gateway nat-08e6adc54855a5789 deletion has been initiated" >> $GITHUB_STEP_SUMMARY
          fi
