service: ui-auth

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  iamPath: ${ssm:/configuration/${self:custom.stage}/iam/path~true, ssm:/configuration/default/iam/path~true, "/"}
  iamPermissionsBoundaryPolicy: ${ssm:/configuration/${self:custom.stage}/iam/permissionsBoundaryPolicy~true, ssm:/configuration/default/iam/permissionsBoundaryPolicy~true, ""}
  sesSourceEmailAddress: ${ssm:/configuration/${self:custom.stage}/sesSourceEmailAddress~true, ssm:/configuration/default/sesSourceEmailAddress~true, ""}
  attachments_bucket_arn: ${cf:uploads-${self:custom.stage}.AttachmentsBucketArn}
  api_gateway_rest_api_name: ${cf:app-api-${self:custom.stage}.ApiGatewayRestApiName}
  application_endpoint_url: ${cf:ui-${self:custom.stage}.ApplicationEndpointUrl}
  okta_metadata_url: ${env:OKTA_METADATA_URL}

resources:
  Conditions:
    CreateEmailConfiguration:
      Fn::Not:
        - Fn::Equals:
            - ""
            - ${self:custom.sesSourceEmailAddress}
    CreatePermissionsBoundary:
      Fn::Not:
        - Fn::Equals:
            - ""
            - ${self:custom.iamPermissionsBoundaryPolicy}
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.stage}-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        EmailConfiguration:
          Fn::If:
            - CreateEmailConfiguration
            - EmailSendingAccount: DEVELOPER
              SourceArn: !Sub arn:aws:ses:us-east-1:${AWS::AccountId}:identity/${self:custom.sesSourceEmailAddress}
            - !Ref AWS::NoValue
        Schema:
          - Name: given_name
            AttributeDataType: String
            Mutable: true
            Required: false
          - Name: family_name
            AttributeDataType: String
            Mutable: true
            Required: false
          - Name: phone_number
            AttributeDataType: String
            Mutable: true
            Required: false
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:custom.stage}-user-pool-client
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - email
          - openid
        CallbackURLs:
          - ${self:custom.application_endpoint_url}
          - http://localhost:3000/
        DefaultRedirectURI: ${self:custom.application_endpoint_url}
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false
        LogoutURLs:
          - ${self:custom.application_endpoint_url}
          - http://localhost:3000/
        SupportedIdentityProviders:
          - Okta
        UserPoolId:
          Ref: CognitoUserPool
      DependsOn: CognitoUserPoolIdentityProvider

    UserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain:
          Fn::Join:
            - ""
            - - ${self:custom.stage}-login-
              - Ref: CognitoUserPoolClient
        UserPoolId:
          Ref: CognitoUserPool

    CognitoUserPoolIdentityProvider:
      Type: AWS::Cognito::UserPoolIdentityProvider
      Properties:
        AttributeMapping:
          email: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
        IdpIdentifiers:
          - IdpIdentifier
        ProviderDetails:
          MetadataURL: ${self:custom.okta_metadata_url}
        ProviderName: Okta
        ProviderType: SAML
        UserPoolId:
          Ref: CognitoUserPool
    CognitoIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: ${self:custom.stage}IdentityPool
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId: !Ref CognitoUserPoolClient
            ProviderName: !GetAtt CognitoUserPool.ProviderName
    CognitoIdentityPoolRoles:
      Type: AWS::Cognito::IdentityPoolRoleAttachment
      Properties:
        IdentityPoolId: !Ref CognitoIdentityPool
        Roles:
          authenticated: !GetAtt CognitoAuthRole.Arn
    CognitoAuthRole:
      Type: AWS::IAM::Role
      Properties:
        Path: ${self:custom.iamPath}
        PermissionsBoundary:
          Fn::If:
            - CreatePermissionsBoundary
            - !Sub arn:aws:iam::${AWS::AccountId}:policy${self:custom.iamPermissionsBoundaryPolicy}
            - !Ref AWS::NoValue
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Federated: "cognito-identity.amazonaws.com"
              Action:
                - "sts:AssumeRoleWithWebIdentity"
              Condition:
                StringEquals:
                  "cognito-identity.amazonaws.com:aud": !Ref CognitoIdentityPool
                "ForAnyValue:StringLike":
                  "cognito-identity.amazonaws.com:amr": authenticated
        Policies:
          - PolicyName: "CognitoAuthorizedPolicy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "mobileanalytics:PutEvents"
                    - "cognito-sync:*"
                    - "cognito-identity:*"
                  Resource: "*"
                - Effect: "Allow"
                  Action:
                    - "execute-api:Invoke"
                  Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${self:custom.api_gateway_rest_api_name}/*
                - Effect: "Allow"
                  Action:
                    - "s3:*"
                  Resource:
                    # Must use Join here.  See: https://github.com/serverless/serverless/issues/3565
                    - Fn::Join:
                        - ""
                        - - ${self:custom.attachments_bucket_arn}/private/
                          - "$"
                          - "{cognito-identity.amazonaws.com:sub}/*"
  Outputs:
    UserPoolId:
      Value: !Ref CognitoUserPool
    UserPoolClientId:
      Value: !Ref CognitoUserPoolClient
    UserPoolClientDomain:
      Value:
        Fn::Join:
          - ""
          - - Ref: UserPoolDomain
            - .auth.
            - Ref: AWS::Region
            - .amazoncognito.com
    IdentityPoolId:
      Value: !Ref CognitoIdentityPool
    Region:
      Value: !Sub ${AWS::Region}
