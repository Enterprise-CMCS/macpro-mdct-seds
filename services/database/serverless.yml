service: database

frameworkVersion: "2"

plugins:
  - serverless-dynamodb-local

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  dynamodb:
    stages:
      - local
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.stage}-forms
            sources: [../../src/database/initial_data_load/forms.json]
          - table: ${self:custom.stage}-age-ranges
            sources: [../../src/database/initial_data_load/age_ranges.json]
          - table: ${self:custom.stage}-status
            sources: [../../src/database/initial_data_load/status.json]
          - table: ${self:custom.stage}-states
            sources: [../../src/database/initial_data_load/states.json]
          - table: ${self:custom.stage}-state-forms
            sources: [../../src/database/initial_data_load/state_forms.json]
          - table: ${self:custom.stage}-form-questions
            sources: [../../src/database/initial_data_load/21E.json]
          - table: ${self:custom.stage}-form-answers
            sources:
              [
                ../../src/database/initial_data_load/form_answers_21E_AL.json,
                ../../src/database/initial_data_load/form_answers_21E_MD.json,
                ../../src/database/initial_data_load/form_answers_21E_PA.json,
              ]
          - table: ${self:custom.stage}-auth-user
            sources: [../../src/database/initial_data_load/auth_user.json]
          - table: ${self:custom.stage}-auth-user-roles
            sources: [../../src/database/initial_data_load/auth_user_roles.json]

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  versionFunctions: true

resources:
  Resources:
    AgeRangesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-age-ranges
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: age_range
            AttributeType: S
        KeySchema:
          - AttributeName: age_range
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    FormAnswersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-form-answers
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: answer_entry
            AttributeType: S
        KeySchema:
          - AttributeName: answer_entry
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    FormQuestionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-form-questions
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: question
            AttributeType: S
        KeySchema:
          - AttributeName: question
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    FormsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-forms
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: form
            AttributeType: S
        KeySchema:
          - AttributeName: form
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StateFormsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-state-forms
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: state_form
            AttributeType: S
        KeySchema:
          - AttributeName: state_form
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StatesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-states
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: state_id
            AttributeType: S
        KeySchema:
          - AttributeName: state_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StatusTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-status
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: status
            AttributeType: S
        KeySchema:
          - AttributeName: status
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    AuthUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-auth-user
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: user-id
            AttributeType: S
        KeySchema:
          - AttributeName: user-id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    AuthUserRolesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-auth-user-roles
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    AuthJobCodesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-auth-user-job-codes
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: job-code
            AttributeType: S
        KeySchema:
          - AttributeName: job-code
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    AuthUserStatesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-auth-user-states
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: user-id
            AttributeType: S
        KeySchema:
          - AttributeName: user-id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
  Outputs:
    AgeRangesTableName:
      Value: !Ref AgeRangesTable
    AgeRangesTableArn:
      Value: !GetAtt AgeRangesTable.Arn
    AgeRangesTableStreamArn:
      Value: !GetAtt AgeRangesTable.StreamArn
    FormAnswersTableName:
      Value: !Ref FormAnswersTable
    FormAnswersTableArn:
      Value: !GetAtt FormAnswersTable.Arn
    FormAnswersTableStreamArn:
      Value: !GetAtt FormAnswersTable.StreamArn
    FormQuestionsTableName:
      Value: !Ref FormQuestionsTable
    FormQuestionsTableArn:
      Value: !GetAtt FormQuestionsTable.Arn
    FormQuestionsTableStreamArn:
      Value: !GetAtt FormQuestionsTable.StreamArn
    FormsTableName:
      Value: !Ref FormsTable
    FormsTableArn:
      Value: !GetAtt FormsTable.Arn
    FormsTableStreamArn:
      Value: !GetAtt FormsTable.StreamArn
    StateFormsTableName:
      Value: !Ref StateFormsTable
    StateFormsTableArn:
      Value: !GetAtt StateFormsTable.Arn
    StateFormsTableStreamArn:
      Value: !GetAtt StateFormsTable.StreamArn
    StatesTableName:
      Value: !Ref StatesTable
    StatesTableArn:
      Value: !GetAtt StatesTable.Arn
    StateTableStreaArn:
      Value: !GetAtt StatesTable.StreamArn
    StatusTableName:
      Value: !Ref StatusTable
    StatusTableArn:
      Value: !GetAtt StatusTable.Arn
    StatusTableStreamArn:
      Value: !GetAtt StatusTable.StreamArn
    AuthUserTableName:
      Value: !Ref AuthUserTable
    AuthUserTableArn:
      Value: !GetAtt AuthUserTable.Arn
    AuthUserTableStreamArn:
      Value: !GetAtt AuthUserTable.StreamArn
    AuthUserRolesTableName:
      Value: !Ref AuthUserRolesTable
    AuthUserRolesTableArn:
      Value: !GetAtt AuthUserRolesTable.Arn
    AuthUserRolesTableStreamArn:
      Value: !GetAtt AuthUserRolesTable.StreamArn
    AuthJobCodesTableName:
      Value: !Ref AuthJobCodesTable
    AuthJobCodesTableArn:
      Value: !GetAtt AuthJobCodesTable.Arn
    AuthJobCodesTableStreamArn:
      Value: !GetAtt AuthJobCodesTable.StreamArn
    AuthUserStatesTableName:
      Value: !Ref AuthJobCodesTable
    AuthUserStatesTableArn:
      Value: !GetAtt AuthJobCodesTable.Arn
    AuthUserStatesTableStreamArn:
      Value: !GetAtt AuthJobCodesTable.StreamArn

    Region:
      Value: !Sub ${AWS::Region}
