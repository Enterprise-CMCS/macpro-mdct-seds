service: database

frameworkVersion: "3"

plugins:
  - serverless-s3-bucket-helper
  - serverless-dynamodb
  - serverless-stack-termination-protection
  - serverless-plugin-scripts
  - serverless-offline

custom:
  project: "seds"
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  iamPath: ${env:IAM_PATH, ssm:/configuration/${self:custom.stage}/iam/path, ssm:/configuration/default/iam/path, "/"}
  iamPermissionsBoundaryPolicy: ${env:IAM_PERMISSIONS_BOUNDARY, ssm:/configuration/${self:custom.stage}/iam/permissionsBoundaryPolicy, ssm:/configuration/default/iam/permissionsBoundaryPolicy, ""}
  serverlessTerminationProtection:
    stages: # This is a list of common names for important envs that should not be destroyed.  You can remove the stage names your project doesn't use; this list is meant to be inclusive.
      - master
      - val
      - production
      - develop
      - main
      - impl
      - val
      - prod
  seedDataMap:
    production: false
    val: false
    master: false
    default: true
  seedData: ${self:custom.seedDataMap.${self:custom.stage}, self:custom.seedDataMap.default}
  localDynamoEndpoint: ${env:DYNAMODB_URL, ""}
  scripts:
    hooks:
      deploy:finalize: |
        aws lambda invoke --region ${self:provider.region} --function-name ${self:service}-${self:custom.stage}-seed --invocation-type RequestResponse /dev/null
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stackTags:  
    PROJECT: ${self:custom.project}
    SERVICE: ${self:service}  
  versionFunctions: true
  iam:
    role:
      path: ${self:custom.iamPath}
      permissionsBoundary:
        Fn::If:
          - CreatePermissionsBoundary
          - !Sub arn:aws:iam::${AWS::AccountId}:policy${self:custom.iamPermissionsBoundaryPolicy}
          - !Ref AWS::NoValue
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"
functions:
  seed:
    handler: handlers/seed/seed.handler
    environment:
      dynamoPrefix: ${self:custom.stage}
      seedData: ${self:custom.seedData}
      DYNAMODB_URL: ${self:custom.localDynamoEndpoint}
    timeout: 120

resources:
  Description: ${self:service} ${self:custom.stage}
  Conditions:
    CreatePermissionsBoundary:
      Fn::Not:
        - Fn::Equals:
            - ""
            - ${self:custom.iamPermissionsBoundaryPolicy}
  Resources:
    AgeRangesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-age-ranges
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: ageRange
            AttributeType: S
        KeySchema:
          - AttributeName: ageRange
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    FormAnswersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-form-answers
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: answer_entry
            AttributeType: S
          - AttributeName: state_form
            AttributeType: S
        KeySchema:
          - AttributeName: answer_entry
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale

        GlobalSecondaryIndexes:
          - IndexName: state-form-index
            KeySchema:
              - AttributeName: state_form
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    FormQuestionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-form-questions
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: question
            AttributeType: S
        KeySchema:
          - AttributeName: question
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    FormTemplatesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-form-templates
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: year
            AttributeType: N
        KeySchema:
          - AttributeName: year
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    FormsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-forms
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: form
            AttributeType: S
        KeySchema:
          - AttributeName: form
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StateFormsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-state-forms
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: state_form
            AttributeType: S
        KeySchema:
          - AttributeName: state_form
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StatesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-states
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: state_id
            AttributeType: S
        KeySchema:
          - AttributeName: state_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    AuthUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-auth-user
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S

        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    AuthUserRolesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-auth-user-roles
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    AuthUserStatesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-auth-user-states
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
  Outputs:
    AgeRangesTableName:
      Value: !Ref AgeRangesTable
    AgeRangesTableArn:
      Value: !GetAtt AgeRangesTable.Arn
    AgeRangesTableStreamArn:
      Value: !GetAtt AgeRangesTable.StreamArn
    FormAnswersTableName:
      Value: !Ref FormAnswersTable
    FormAnswersTableArn:
      Value: !GetAtt FormAnswersTable.Arn
    FormAnswersTableStreamArn:
      Value: !GetAtt FormAnswersTable.StreamArn
    FormQuestionsTableName:
      Value: !Ref FormQuestionsTable
    FormQuestionsTableArn:
      Value: !GetAtt FormQuestionsTable.Arn
    FormQuestionsTableStreamArn:
      Value: !GetAtt FormQuestionsTable.StreamArn
    FormsTableName:
      Value: !Ref FormsTable
    FormsTableArn:
      Value: !GetAtt FormsTable.Arn
    FormsTableStreamArn:
      Value: !GetAtt FormsTable.StreamArn
    StateFormsTableName:
      Value: !Ref StateFormsTable
    StateFormsTableArn:
      Value: !GetAtt StateFormsTable.Arn
    StateFormsTableStreamArn:
      Value: !GetAtt StateFormsTable.StreamArn
    StatesTableName:
      Value: !Ref StatesTable
    StatesTableArn:
      Value: !GetAtt StatesTable.Arn
    StateTableStreamArn:
      Value: !GetAtt StatesTable.StreamArn
    FormTemplatesTableName:
      Value: !Ref FormTemplatesTable
    FormTemplatesTableArn:
      Value: !GetAtt FormTemplatesTable.Arn
    FormTemplatesTableStreamArn:
      Value: !GetAtt FormTemplatesTable.StreamArn
    AuthUserTableName:
      Value: !Ref AuthUserTable
    AuthUserTableArn:
      Value: !GetAtt AuthUserTable.Arn
    AuthUserTableStreamArn:
      Value: !GetAtt AuthUserTable.StreamArn
    AuthUserRolesTableName:
      Value: !Ref AuthUserRolesTable
    AuthUserRolesTableArn:
      Value: !GetAtt AuthUserRolesTable.Arn
    AuthUserRolesTableStreamArn:
      Value: !GetAtt AuthUserRolesTable.StreamArn
    AuthUserStatesTableName:
      Value: !Ref AuthUserStatesTable
    AuthUserStatesTableArn:
      Value: !GetAtt AuthUserStatesTable.Arn
    AuthUserStatesTableStreamArn:
      Value: !GetAtt AuthUserStatesTable.StreamArn

    Region:
      Value: !Sub ${AWS::Region}
